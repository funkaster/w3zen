w3zen.cgi v0.1.0
by Rolando Abarca

* About

w3zen is a minimalistic blog script, inspired in Blosxom.

* HowTo

Place w3zen.cgi in your public web directory, and add execution
permissions to the file. A common usage is to set the w3zen.cgi as the
default 404 handler. You can do this in Lighttpd:

  $HTTP["host"] == "myblog.com" {
    server.error-handler-404 = "/w3zen.cgi"
  }

In the w3zen.cgi, you need to configure a few variables (the SETTINGS
constant in the W3Zen class):

  blog_title: you can call this from the +layout+ template (more on this
              later)
  blog_description: same thing as the title
  time_format: how the time of your blog entries will be displayed
  data_dir: where your entries are stored
  url: the url of your blog
  num_entries: how many entries to show in the front page
  file_extension: the extension of your entries. Usually these are plain
                  txt files, using Textile format.

Once you have set the variables, it's time to start blogging!. All you
need to do, is make sure the data_dir is readable by the process running
your web server. Inside that directory, you create your very own
structure of directories. The w3zen.cgi script will search all files
there, order them by ctime (check File::ctime) in descending order and
list them in your main page. That's it!

* Flavours

Talk about the flavours here

* Customizing

Inside your data_dir you can customize the layout, creating a file
layout.rhtml. Usually you would create a layout with a structure like
this:

  <html>
  <title><%= SETTINGS[:blog_title] %></title>
  <body>
  <%= yield %>
  </body>
  </html>

Since the layout will be evaluated by ERB, and called with the binding
of a W3Zen instance, you can use all the SETTINGS and other variables.
The yield is necessary, since it will fill the layout with the real
contents.

The content is structurated really in a really simple way, so you can
customize most of the visualization using CSS. The basic CSS class are:

  entries: holds all the entries (list format)
  entry: a specific entry (list format)
  entry.title: the title of an entry
  title.date: the date of an entry
  post: the content of a post (view format)

The content of the post is rendered using RedCloth, so you may freely
use Textile markup.

* Meta Information for your posts

You can add additional information on your posts, creating a file with
the same name than your entry, but with the ".yaml" extension. Inside
that YAML file, you can place the following info (keys as ruby strings)

  created_at: Timestamp of creation. Note that this field should be a
              timestamp and not a date
  publish_after: Timestamp of publication. It will not be shown before
                 this date
  author: name of the author of the entry

Any other info will be ignored.

* Changelog

v0.1.0 - Initial Release
